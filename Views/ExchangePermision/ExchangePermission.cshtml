@model AKSoft.Models.HSales
@{
    ViewBag.Title = "إذن صرف";
}
@{if (Convert.ToInt32(Session["Role"]) == 1)
{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
if (Convert.ToInt32(Session["Role"]) == 3)
{
    Layout = "~/Views/Shared/_LayoutEm.cshtml";

}
if (Convert.ToInt32(Session["Role"]) == 2)
{
    Layout = "~/Views/Shared/_LayoutGeneral.cshtml";
}
if (Convert.ToInt32(Session["Role"]) == 7)
{
    Layout = "~/Views/Shared/_LayoutWorker.cshtml";
}
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link rel="stylesheet" href="~/Content/st.css" />
    <script src="~/Scripts/sweetalert.min.js"></script>
    <style>
        .Elements {
            background-color: #e5e5e5;
            list-style-type: none;
            border: ridge 1px;
            margin: 0;
            padding: 15px;
        }

        .head {
            background-color: #3577ff;
            width: 40%;
            font-size: 18px;
            color: white;
        }
    </style>
</head>
<body>
    <br />
    @if (TempData["Al"] != null)
    {
        <script>
            swal("تم الحفظ بنجاح", " ", "success");
        </script>
        <strong style="color:green">تم الحفظ بفضل الله </strong>@TempData["Al"]
    }

    @using (Html.BeginForm("ExchangePermission", "ExchangePermission", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div style="direction:rtl;">
            <h1 class="head save">إذن صرف</h1>
        </div>
        <ul class="Elements gs">
            <li class="">
                <label class="Lab">التاريخ</label>
                @Html.EditorFor(model => model.AddUserDate, new { htmlAttributes = new { @Value = @DateTime.Now.ToShortDateString(), @class = "form-control Txt drop" } }) @*Required TextBox*@
            </li>
            <li>
                <label class="Lab">المخزن</label>
                @Html.DropDownListFor(model => model.StoreSerial, ViewBag.DepartmentList2 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" }) @*Required DropDownList *@
                <label class="Lab">مجموعة الصنف</label>
                @Html.DropDownListFor(model => model.GroupSerial, ViewBag.DepartmentList3 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
                <label class="Lab">العميل</label>
                @Html.DropDownListFor(model => model.CustomerSerial, ViewBag.DepartmentList5 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
            </li>

            <li>
                <label class="Lab">الصنف</label>
                @Html.DropDownListFor(model => model.ItemSerial, ViewBag.DepartmentList4 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })

                <label class="Lab">الوحده</label>
                @Html.DropDownListFor(model => model.UnitSerial, ViewBag.DepartmentList1 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
                <label class="Lab">المندوب</label>
                @Html.DropDownListFor(model => model.DealerCode, ViewBag.DepartmentList6 as SelectList, "--select--", new { @class = "Txt drop" })
            </li>
            <li>
                <a onclick="PopupForm('@Url.Action("أخر سعر بيع للصنف", "Reports")')"> <label class="Lab">الكميه</label></a>

                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "Quantity", @id = "txtFirstNo", @onkeyup = "Multiy()", @required = "required" } })
            </li>
            <li>
                <label class="Lab">السعر</label>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "Price", @id = "txtSecondNo", @onkeyup = "Multiy()", @required = "required" } }) @*Multiply function in js*@
            </li>
            <li>
                <label class="Lab">الإجمالي</label>
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "Total", @id = "txtResult", @onkeyup = "Disc()" } })
                @*       <label class="Lab">Discount</label>
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "Discount", @onkeyup = "" } })<label class="Lab"></label>

                            @Html.EditorFor(model => model.DiscValue, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "Discount", @onkeyup = "Disc()" } })
                            <label class="Lab">Discount Percent</label>
                            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "DiscountPercent", @onkeyup = "DiscountVal()" } })%
                               <label class="Lab">Tax</label>
                            @Html.EditorFor(model => model.TaxValue, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "Tax", @onkeyup = "TaxTotal()" } })
                            <label class="Lab">Tax Percent</label>
                            @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "TaxPercent", @onkeyup = "TaxVal()" } })%
                         </li>
                        <li>
                            <label class="Lab">Total After Dis</label>
                            @Html.EditorFor(model => model.TotalAfterDisc, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "DiscTotal" } })
                        </li>
                        <li>
                            <label class="Lab">Total After Tax</label>
                            @Html.EditorFor(model => model.TotalAfterTax, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "taxTotal" } })
                        </li>
                       <li>
                            <label class="Lab">Total Value</label>
                            @Html.EditorFor(model => model.TotalAfterTax, new { htmlAttributes = new { @class = "Txt drop", @placeholder = "", @id = "taxTotal" } })
                        </li>*@
            <li>
                <button class="save">حفظ</button>
                <a href="@Url.Action("DisplayInvoiceSales", "Sales")"><input style="background-color:#0bf765" class="save" value="عرض الكل" /></a>
            </li>

        </ul>

    }

    <script type="text/javascript">
        function Multiy() {
            var txtFirstNo = document.getElementById('txtFirstNo').value;
            var txtSecondNo = document.getElementById('txtSecondNo').value;
            var result = parseFloat(txtFirstNo) * parseFloat(txtSecondNo);//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('txtResult').value = result;
            }
        }
        function Disc() {
            DiscountPercent();
            var txtFirstNo = document.getElementById('txtResult').value;
            var txtSecondNo = document.getElementById('DiscountPercent').value;
            var txt3 = document.getElementById('txtResult').value;
            var result = parseFloat(txtFirstNo) - ((parseFloat(txtSecondNo) / 100) * parseFloat(txtFirstNo));//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('DiscTotal').value = result;
            }

        }
        function TaxTotal() {
            TaxPercent();
            var txtFirstNo = document.getElementById('DiscTotal').value;
            var txtSecondNo = document.getElementById('Tax').value;
            var result = parseFloat(txtFirstNo) + parseFloat(txtSecondNo);//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('taxTotal').value = result;
            }
        }
        function DiscountPercent() {
            var txtFirstNo = document.getElementById('Discount').value;
            var result = parseFloat(txtFirstNo) / 100;//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('DiscountPercent').value = result;
            }
        }
        function TaxPercent() {
            var txtFirstNo = document.getElementById('Tax').value;

            var result = parseFloat(txtFirstNo) / 100;//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('TaxPercent').value = result;
            }
        }

        function DiscountVal() {
            var txtFirstNo = document.getElementById('DiscountPercent').value;
            var txtSecondNo = document.getElementById('txtResult').value;
            var result = (parseFloat(txtFirstNo) / 100) * parseFloat(txtSecondNo);//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('Discount').value = result;
            }
        }
        function TaxVal() {
            var txtFirstNo = document.getElementById('TaxPercent').value;
            var result = (parseFloat(txtFirstNo) / 100) * 100;//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('Tax').value = result;
            }
        }
        function PopupForm(url) {
            var formDiv = $('<div/>');
            $.get(url)
            .done(function (response) {
                formDiv.html(response);

                Popup = formDiv.dialog({
                    autoOpen: true,
                    resizable: false,
                    title: 'Item Last PurchasePrice',
                    height: 230,
                    width: 370,
                    close: function () {
                        Popup.dialog('destroy').remove()
                    }

                });
            });
        }
    </script>
</body>
</html>